% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cond_format.R
\name{cond_format}
\alias{cond_format}
\title{Add conditional formatting to columns of a worksheet}
\usage{
cond_format(
  wb,
  sheetName = NULL,
  columns,
  colourScale = NULL,
  contains = NULL,
  expression = NULL,
  type = NULL,
  rule = NULL,
  style = openxlsx::createStyle(fontColour = "white", bgFill = "#ad0000"),
  ...
)
}
\arguments{
\item{wb}{a Workbook object}

\item{sheetName}{a name or index of a worksheet}

\item{columns}{column names or indices to apply conditional formatting to}

\item{colourScale}{shortcut argument to apply "colourScale" formatting, e.g. `c("red" = 0, "grey" = 50, "green" = 100)`}

\item{contains}{shortcut argument to apply "contains" formatting, e.g. `"word"`}

\item{expression}{shortcut argument to apply "expression" formatting, e.g. `">=50"`}

\item{type}{directly passed to `openxlsx::conditionalFormatting()`}

\item{rule}{directly passed to `openxlsx::conditionalFormatting()`}

\item{style}{directly passed to `openxlsx::conditionalFormatting()`. By default, cells will have a red fill and white font color.}

\item{...}{directly passed to `openxlsx::conditionalFormatting()`}
}
\description{
This function is a wrapper for `openxlsx::conditionalFormatting()` allowing for a more convenient application of conditional formatting to a sheet in a Workbook object. The arguments `colourScale`, `contains` and `expression` serve as shortcuts to obtaining the respective conditional formatting, but it is still possible to obtain \href{https://rdrr.io/cran/openxlsx/man/conditionalFormatting.html}{all possible conditional formatting styles available in {openxlsx}} via the arguments `rule`, `style` and `type` which are directly passed to `openxlsx::conditionalFormatting()`.
}
